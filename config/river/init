#!/bin/bash

# Startup
# Set the brightness since it defaults to 100% on boot
brightnessctl set 20%

waybar &
wlsunset -l 59.6 -L 18.1 &

# Pick a random wallpaper
file=$(ls ~/wallpapers | shuf -n 1)
swaybg -m fill -i ~/wallpapers/$file &

# Blur the wallpaper and put a copy in tmp location for lock screen usage
convert ~/wallpapers/$file -blur 16x8 /tmp/lock_img.jpg &

# Daemons
gpg-agent --daemon &
syncthing serve --no-browser --logfile=/tmp/synchting-$(date +%F-%R).log &
pipewire &
mako &
kanshi &

# Lock the screen after 300 seconds, turn off the screen after another 300
# and also lock the screen before sleep.
swayidle -w	timeout 300 "lock.sh" timeout 600 "wlopm --off '*'" resume "wlopm --on '*'" timeout 900 "loginctl suspend" before-sleep "lock.sh" &

/usr/libexec/polkit-gnome-authentication-agent-1 &

# Fix for flatpak
dbus-update-activation-environment DISPLAY

# Modkeys
mod="Mod4"
alt="Mod1"
shift="Shift"
ctrl="Control"

# Number of tags
n_tags=6

# Set up tags and create appropriate keybinds for them
tags=()
for i in $(seq 1 $n_tags); do
    tag=$((1 << ($i - 1)))
    tags+=($tag)
    riverctl map normal $mod $i spawn "flow toggle-tags ${tag}"
    riverctl map normal $mod+$shift $i set-view-tags $tag
    riverctl map normal $mod+$ctrl $i toggle-focused-tags $tag
done

# Get all tags
all_tags=$(((1 << $n_tags) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags

# Command to control Spotify
music_ctrl="dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player."

# Toggle visibility of Waybar
riverctl map normal $mod B spawn 'pkill -SIGUSR1 waybar'

# Move, resize and toggle floating windows with mouse buttons
riverctl map-pointer normal $mod BTN_LEFT move-view
riverctl map-pointer normal $mod BTN_RIGHT resize-view

# Spawn various apps
riverctl map normal $mod Return spawn foot
riverctl map normal $mod+$shift Return spawn 'foot --app-id="scratchterm"'
riverctl map normal $mod W spawn firefox
riverctl map normal $mod C spawn signal-desktop
riverctl map normal $mod S spawn 'flatpak run com.spotify.Client'
riverctl map normal $mod D spawn 'flatpak run com.discordapp.Discord'
riverctl map normal $mod R spawn fuzzel.sh
riverctl map normal $mod N spawn 'foot --app-id="newsboat" newsboat -C=~/.config/newsboat/config -u=~/sync/files/newsboat/urls -c=~/sync/files/newsboat/cache.db'
riverctl map normal $mod+$ctrl Return spawn pcmanfm
riverctl map normal $mod M spawn mount.sh
riverctl map normal $mod P spawn pass.sh
riverctl map normal $mod O spawn otp.sh
riverctl map normal $mod E spawn emojis.sh
riverctl map normal $mod K spawn 'kanshictl reload'

# Lock the screen
riverctl map normal $mod L spawn lock.sh

# Take a screenshot
riverctl map normal $mod+$shift P spawn screenshot.sh

# Close a window
riverctl map normal $mod+$shift C close

# Fullscreen and float toggles
riverctl map normal $mod F toggle-fullscreen
riverctl map normal $mod+$shift F toggle-float

# Pin a window
riverctl map normal $mod A set-view-tags $all_tags

# Snap, move and resize floating windows
riverctl map normal $alt Up snap up
riverctl map normal $alt Down snap down
riverctl map normal $alt Right snap right
riverctl map normal $alt Left snap left

riverctl map normal $alt+$shift Up move up 20
riverctl map normal $alt+$shift Down move down 20
riverctl map normal $alt+$shift Right move right 20
riverctl map normal $alt+$shift Left move left 20

riverctl map normal $alt+$ctrl Up resize vertical 20
riverctl map normal $alt+$ctrl Down resize vertical -20
riverctl map normal $alt+$ctrl Right resize horizontal 20
riverctl map normal $alt+$ctrl Left resize horizontal -20

# Notification callbacks
riverctl map normal $mod+$shift B spawn 'callbacks.sh battery'
riverctl map normal $mod+$shift D spawn 'callbacks.sh date'
riverctl map normal $mod+$shift W spawn 'callbacks.sh wifi'
riverctl map normal $mod Q spawn 'callbacks.sh mic'

# Jump between tags
riverctl map normal $mod Tab spawn 'flow focus-urgent-tags'

# Cycle between the tags
riverctl map normal $mod+$ctrl Right spawn "flow cycle-tags next ${n_tags}"
riverctl map normal $mod+$ctrl+$alt Right spawn "flow cycle-tags next ${n_tags} -o"

riverctl map normal $mod+$ctrl Left spawn "flow cycle-tags previous ${n_tags}"
riverctl map normal $mod+$ctrl+$alt Left spawn "flow cycle-tags previous ${n_tags} -o"

# Exit River
riverctl map normal $mod+$shift Q exit

# Move focus around
riverctl map normal $mod Right focus-view next
riverctl map normal $mod Up focus-view previous
riverctl map normal $mod Left focus-view left
riverctl map normal $mod Down focus-view next

# Move windows around the stack
riverctl map normal $mod+$shift Right swap next
riverctl map normal $mod+$shift Up swap next
riverctl map normal $mod+$shift Down swap previous

# Move window directly to main
riverctl map normal $mod+$shift Left zoom

# Switch output focus
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# Send view to output
riverctl map normal $mod+$shift Comma send-to-output -current-tags previous
riverctl map normal $mod+$shift Period send-to-output -current-tags next

# Adjust the ratio and reset it
riverctl map normal $mod+$alt Left send-layout-cmd rivertile 'main-ratio -0.05'
riverctl map normal $mod+$alt Right send-layout-cmd rivertile 'main-ratio +0.05'
riverctl map normal $mod+$shift Space send-layout-cmd rivertile 'main-ratio 0.5'

# Adjust number of views in main
riverctl map normal $mod Plus send-layout-cmd rivertile 'main-count +1'
riverctl map normal $mod Minus send-layout-cmd rivertile 'main-count -1'
riverctl map normal $mod Space send-layout-cmd rivertile 'main-count 1'

# Music controls
riverctl map normal $mod 7 spawn "${music_ctrl}Previous"
riverctl map normal $mod 8 spawn "${music_ctrl}PlayPause"
riverctl map normal $mod 9 spawn "${music_ctrl}Next"

# Screen brightness control
riverctl map normal None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
riverctl map normal None XF86MonBrightnessUp spawn 'brightnessctl set +5%'

# Volume controls
riverctl map normal None XF86AudioRaiseVolume spawn 'pactl set-sink-volume 0 +5%'
riverctl map normal None XF86AudioLowerVolume spawn 'pactl set-sink-volume 0 -5%'
riverctl map normal None XF86AudioMute spawn 'pactl set-sink-mute 0 toggle'
# Extra mute button in case of no mediakeys
riverctl map normal $mod+$shift M spawn 'pactl set-sink-mute 0 toggle'

# Set background and border color
riverctl border-color-focused 0xB6AFC9
riverctl border-color-unfocused 0x54546D
riverctl border-width 3

# Passthrough mode, useful when running virtual machines
riverctl declare-mode passthrough
riverctl map normal $mod+$ctrl+$alt Return enter-mode passthrough
riverctl map passthrough $mod+$ctrl+$alt Backspace enter-mode normal

# Set repeat rate
riverctl set-repeat 50 300

# Set app-ids of views which should float
riverctl rule-add -app-id 'newsboat' float
riverctl rule-add -app-id 'scratchterm' float
riverctl rule-add -app-id 'pavucontrol' float
riverctl rule-add -app-id 'bluetoothctl' float
riverctl rule-add -app-id 'iwctl' float
riverctl rule-add -title 'Execute File' float # Running appimages from pcmanfm
riverctl rule-add -title 'Open Folder' float # VS Code dialog
riverctl rule-add -title 'Open File' float # VS Code dialog
riverctl rule-add -title 'Save As' float # VS Code dialog
riverctl rule-add -title 'Paradox Launcher' float # Game launcher for CK3

# Tag rules for new views
riverctl rule-add -app-id 'Firefox' tags ${tags[0]}
riverctl rule-add -app-id 'Signal' tags ${tags[2]}
riverctl rule-add -app-id 'discord' tags ${tags[2]}
riverctl rule-add -app-id 'Spotify' tags ${tags[3]}
riverctl rule-add -app-id 'steam' tags ${tags[4]}

# river defaulting to CSD if the client does not support xdg-decoration
# For now this goes for applications such as Firefox, therefore forcing server side decoration
riverctl rule-add ssd

# Float views that should float
riverctl rule-add -app-id float float

# Set touchpad by grabbing the event
for pad in $(riverctl list-inputs | grep -i touchpad )
do
  riverctl input $pad events enabled
  riverctl input $pad tap enabled
  riverctl input $pad natural-scroll enabled
done

# Focus should follow cursor...
riverctl focus-follows-cursor normal

# ...and warp it if another output is focused
riverctl set-cursor-warp on-output-change

# xcursor theme
riverctl xcursor-theme Adwaita

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -outer-padding 5 -view-padding 5 -main-ratio 0.5 &
